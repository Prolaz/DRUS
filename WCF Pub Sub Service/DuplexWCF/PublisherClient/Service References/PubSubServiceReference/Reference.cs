//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PublisherClient.PubSubServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ListPublishSubscribe.Service", ConfigurationName="PubSubServiceReference.IPubSubService", CallbackContract=typeof(PublisherClient.PubSubServiceReference.IPubSubServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IPubSubService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ListPublishSubscribe.Service/IPubSubService/Subscribe", ReplyAction="http://ListPublishSubscribe.Service/IPubSubService/SubscribeResponse")]
        void Subscribe(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ListPublishSubscribe.Service/IPubSubService/Subscribe", ReplyAction="http://ListPublishSubscribe.Service/IPubSubService/SubscribeResponse")]
        System.Threading.Tasks.Task SubscribeAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ListPublishSubscribe.Service/IPubSubService/Unsubscribe", ReplyAction="http://ListPublishSubscribe.Service/IPubSubService/UnsubscribeResponse")]
        void Unsubscribe(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ListPublishSubscribe.Service/IPubSubService/Unsubscribe", ReplyAction="http://ListPublishSubscribe.Service/IPubSubService/UnsubscribeResponse")]
        System.Threading.Tasks.Task UnsubscribeAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ListPublishSubscribe.Service/IPubSubService/UnsubscribeAll", ReplyAction="http://ListPublishSubscribe.Service/IPubSubService/UnsubscribeAllResponse")]
        void UnsubscribeAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ListPublishSubscribe.Service/IPubSubService/UnsubscribeAll", ReplyAction="http://ListPublishSubscribe.Service/IPubSubService/UnsubscribeAllResponse")]
        System.Threading.Tasks.Task UnsubscribeAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ListPublishSubscribe.Service/IPubSubService/PublisherInit", ReplyAction="http://ListPublishSubscribe.Service/IPubSubService/PublisherInitResponse")]
        string PublisherInit(string Ime, string Lokacija);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ListPublishSubscribe.Service/IPubSubService/PublisherInit", ReplyAction="http://ListPublishSubscribe.Service/IPubSubService/PublisherInitResponse")]
        System.Threading.Tasks.Task<string> PublisherInitAsync(string Ime, string Lokacija);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ListPublishSubscribe.Service/IPubSubService/ClientInit", ReplyAction="http://ListPublishSubscribe.Service/IPubSubService/ClientInitResponse")]
        void ClientInit();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ListPublishSubscribe.Service/IPubSubService/ClientInit", ReplyAction="http://ListPublishSubscribe.Service/IPubSubService/ClientInitResponse")]
        System.Threading.Tasks.Task ClientInitAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ListPublishSubscribe.Service/IPubSubService/PublishValueChange", ReplyAction="http://ListPublishSubscribe.Service/IPubSubService/PublishValueChangeResponse")]
        void PublishValueChange(string Id, int Value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ListPublishSubscribe.Service/IPubSubService/PublishValueChange", ReplyAction="http://ListPublishSubscribe.Service/IPubSubService/PublishValueChangeResponse")]
        System.Threading.Tasks.Task PublishValueChangeAsync(string Id, int Value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPubSubServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://ListPublishSubscribe.Service/IPubSubService/ValueChange")]
        void ValueChange(string Id, int Value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPubSubServiceChannel : PublisherClient.PubSubServiceReference.IPubSubService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PubSubServiceClient : System.ServiceModel.DuplexClientBase<PublisherClient.PubSubServiceReference.IPubSubService>, PublisherClient.PubSubServiceReference.IPubSubService {
        
        public PubSubServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public PubSubServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public PubSubServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public PubSubServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public PubSubServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Subscribe(string ID) {
            base.Channel.Subscribe(ID);
        }
        
        public System.Threading.Tasks.Task SubscribeAsync(string ID) {
            return base.Channel.SubscribeAsync(ID);
        }
        
        public void Unsubscribe(string ID) {
            base.Channel.Unsubscribe(ID);
        }
        
        public System.Threading.Tasks.Task UnsubscribeAsync(string ID) {
            return base.Channel.UnsubscribeAsync(ID);
        }
        
        public void UnsubscribeAll() {
            base.Channel.UnsubscribeAll();
        }
        
        public System.Threading.Tasks.Task UnsubscribeAllAsync() {
            return base.Channel.UnsubscribeAllAsync();
        }
        
        public string PublisherInit(string Ime, string Lokacija) {
            return base.Channel.PublisherInit(Ime, Lokacija);
        }
        
        public System.Threading.Tasks.Task<string> PublisherInitAsync(string Ime, string Lokacija) {
            return base.Channel.PublisherInitAsync(Ime, Lokacija);
        }
        
        public void ClientInit() {
            base.Channel.ClientInit();
        }
        
        public System.Threading.Tasks.Task ClientInitAsync() {
            return base.Channel.ClientInitAsync();
        }
        
        public void PublishValueChange(string Id, int Value) {
            base.Channel.PublishValueChange(Id, Value);
        }
        
        public System.Threading.Tasks.Task PublishValueChangeAsync(string Id, int Value) {
            return base.Channel.PublishValueChangeAsync(Id, Value);
        }
    }
}
